@import url("../assets/normalize.css");

:root {
  --theme-text_0: hsl(0deg 0% 20%);
  --theme-text_1: hsl(0deg 0% 44%);
  --theme-bg_0: hsl(27deg 39% 95%);
  --theme-bg_1: hsl(0deg 0% 100%);
  --theme-primary: hsl(266deg 100% 61%);
  --theme-primary_smooth: hsl(266deg 100% 92%);
  --theme-secondary: hsl(26deg 100% 68%);
  --theme-success: green;
}

html {
  /* üí° Change font-size so that 1rem = 10px */
}

body {
  font-family: "IBM Plex Sans", sans-serif;
  background-color: var(--theme-bg_0);
  color: var(--theme-text_0);
  box-sizing: border-box;
  font-weight: 400;
  /* üí° Here's the first fixed unit to converted */
  font-size: 16px;
  line-height: 20px;
}

body * {
  box-sizing: inherit;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.content {
  position: relative;
  margin: 0 auto;
  max-width: 480px;
  padding: 64px 16px;
}

.card {
  position: relative;
  padding: 24px 16px;
  background-color: var(--theme-bg_1);
  border: 1px solid var(--theme-primary);
  box-shadow: 2px 2px var(--theme-primary_smooth);
  border-radius: 3px;
  margin: 24px 0;
}

.card p {
  margin: 0;
  text-align: justify;
}

.tag {
  /* üí° Does this color respects AA level? */
  color: var(--theme-secondary);
  margin-bottom: 4px;
  text-transform: uppercase;
  font-size: 14px;
  font-weight: 600;
  line-height: 14px;
}

.title-xl {
  font-size: 28px;
  font-weight: 600;
  line-height: 33.6px;
  margin: 0 0 8px;
}

.title-md {
  font-size: 18px;
  font-weight: 600;
  margin: 32px 0 8px;
  line-height: 21.6px;
}

.list {
  list-style: none;
  padding: 0;
  margin: 4px 0;
}

.list li {
  margin: 4px 0;
}

/* üí° To meet WCAG 1.4.1 (Use of color)
  we cant use color as the only way to give meaning */
.list li[data-status="no"]::before {
  content: "‚óè";
  color: #9c9c9c;
}

.list li[data-status="yes"]::before {
  /* üí° We can replace this with ‚úì check character */
  content: "‚óè";
  color: green;
}

.list li[data-status="no"] {
  color: var(--theme-text_1);
}

@media (min-width: 480px) {
  .list {
    display: flex;
    flex-wrap: wrap;
  }

  .list > * {
    flex-basis: 50%;
  }
}

.btnBell {
  display: flex;
  align-items: center;
  min-height: 35px;
  font-size: 16px;
  font-weight: 600;
  border: none;
  border-radius: 3px;
  padding: 8px 16px;
  background-color: var(--theme-bg_0);
  color: var(--theme-text_0);
  border: 2px solid var(--theme-primary);
  cursor: pointer;
  /* BONUS motion 1/2 */
  animation: zoom 4s infinite;
}

.btnBell:hover {
  opacity: 0.8;
}

.btnBell-svg {
  width: 16px;
  max-height: 16px;
  fill: currentColor;
  margin-right: 8px;
  /* BONUS motion 1/2 */
  animation: shake 4s infinite;
}

.footer {
  position: absolute;
  width: 100%;
  display: flex;
  justify-content: center;
  padding: 16px;
  /* background: var(--theme-text_0); */
}

.footer::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--theme-text_0);
}

.footer-text {
  position: relative;
  text-align: center;
  margin: 0;
  font-size: 13px;
  /** üçÄ Some A11Y debug tools might mark this as color contract issue.
  It's a false positive caused by the ::before pseudo-element above */
  color: var(--theme-bg_0);
  opacity: 0.7;
}

.footer-text a {
  color: inherit;
}

/*  ----------------------------------------- *\
|*  You do not need to touch the code below   *|
|*     but you can see how it was made.       *|
\** ----------------------------------------- */

@keyframes shake {
  40%,
  60% {
    transform: rotate(0deg);
  }

  42.5%,
  57.5% {
    transform: rotate(10deg);
  }

  45%,
  50%,
  55% {
    transform: rotate(-20deg);
  }

  47.5%,
  52.5% {
    transform: rotate(20deg);
  }
}

@keyframes zoom {
  0%,
  45%,
  60%,
  100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }
}
