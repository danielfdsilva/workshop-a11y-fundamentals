/* Do never ever do this ü•∫.
/* *:focus {
  outline: none;
} */

/* ------- BUTTON -------  */

.c-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 1.8rem;
  border: none;
  padding: 8px 24px;
  background-color: var(--theme-primary);
  color: #fff;
  border: none;
  cursor: pointer;
  border-radius: 4px;
  /* üí° Bonus #2 Ensure WCAG 2.5.5 */
  min-height: 44px;
  min-width: 44px;
}

.c-btnPrimary:hover {
  opacity: 0.8;
}

/* üí° Link focus styles + Bonus #1.1 */
.c-btnPrimary:focus:not(:focus-visible) {
  outline: none;
}

.c-btnPrimary:focus-visible {
  box-shadow: var(--theme-focus_shadow);
  outline: var(--theme-focus_outline);
}

/* üí° Link focus styles + Bonus #1.2 */
/* --- 
 Note: For demo purposes, you'll need to update
 the HTML class from c-btnPrimary to c-btnPrimaryJS
--- */
.js-focus-visible .c-btnPrimaryJS:focus {
  outline: none;
}

.c-btnPrimaryJS:focus.focus-visible {
  box-shadow: var(--theme-focus_shadow);
  outline: var(--theme-focus_outline);
}

/* ------- LINK -------  */

.c-link {
  color: var(--theme-text_0);
  padding: 1px 2px;
}

.c-link:hover {
  color: var(--theme-primary);
}

/* üí° Link focus styles */
.c-link:focus {
  color: var(--theme-primary);
  box-shadow: var(--theme-focus_shadow);
  outline: var(--theme-focus_outline);
}

/* ------- FORM INPUTS -------  */

.fieldArea {
  max-width: 200px;
}

.fieldLabel {
  display: block;
  font-weight: 600;
  /* üí° Bonus #3 Use padding instead of margin to
  be included in the interactive area */
  padding-bottom: 8px;
}

.textInput {
  width: 100%;
  height: 32px;
  padding: 4px 8px;
  border-radius: 4px;
  border: 1px solid var(--theme-text_1);
}

/* üí° Input focus styles */

.textInput:hover {
  border-color: var(--theme-primary);
}

.textInput:focus {
  box-shadow: var(--theme-focus_shadow);
  outline: var(--theme-focus_outline);
}

/* üí° Bonus #3 */
.fieldArea:focus-within .fieldLabel {
  color: var(--theme-primary);
}

/* ------- BUTTON CLOSE -------  */

.c-btnCorner {
  all: unset;
  position: absolute;
  --cornerOffset: 16px;
  bottom: var(--cornerOffset);
  right: var(--cornerOffset);
}

.c-btnCorner-area {
  position: relative;
  /* üí° Bonus #2 - Ensure at least 24x24
  to comply with WCAG 2.5.8 (Draft WCAG 2.2) */
  width: 24px;
  height: 24px;
  border-radius: 50%;
  color: var(--theme-text_0);
  border: 1px solid;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  cursor: pointer;
}

/* üçÄ The hover indicator has enough contrast,
so the focus can be exactly the same */
.c-btnCorner-area:hover,
.c-btnCorner:focus .c-btnCorner-area {
  background-color: var(--theme-primary);
  color: var(--theme-bg_0);
  transition: background-color 150ms, color 150ms;
}

.c-btnCorner svg {
  width: 9px;
  margin-left: 1px;
  fill: currentColor;
}

/* üí°üçÄ Bonus #2 - Extra trick to to be applied to "corner buttons"
Use a pseudo selector to increase the interactive area (44x44),
even if visually the button looks smaller (24x24px). */
.c-btnCorner::before {
  content: "";
  position: absolute;
  width: 44px;
  height: 44px;
  bottom: calc(var(--cornerOffset) * -1);
  right: calc(var(--cornerOffset) * -1);
}
